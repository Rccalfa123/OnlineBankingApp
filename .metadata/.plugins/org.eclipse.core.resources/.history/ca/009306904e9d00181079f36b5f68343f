package com.cg.alfabankapp.controller;

import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.cg.alfabankapp.account.dao.MoneyMoneyBankCollection;
import com.cg.alfabankapp.factory.MMBankFactory;


@WebServlet("*.app")
public class Bankcontroller extends HttpServlet {
	private static final long serialVersionUID = 1L;

	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		
		Map<String, Object> account= new HashMap<String, Object>();
		
		MMBankFactory mmBankFactory = new MMBankFactory();

		MoneyMoneyBankCollection bankCollection = new MoneyMoneyBankCollection();
		
		String name = request.getServletPath();
		System.out.println(name);

		switch (name) {
		case "/addNewAccount.app":
			account.put("accountHolderName", request.getParameter("customerName")) ;
			
			account.put("gender", request.getParameter("gender")) ;
			
			String dob = request.getParameter("dob");
			DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
			LocalDate date = LocalDate.parse(dob, formatter);
			
			account.put("dateOfBirth",date);
			
			account.put("contactNumber",request.getParameter("contact_no")) ;
			
			account.put("houseNo", request.getParameter("houseNo")) ;
			
			account.put("street", request.getParameter("street")) ;
			
			account.put("city", request.getParameter("city")) ;
			
			account.put("state", request.getParameter("state")) ;
			
			account.put("pincode", request.getParameter("pincode")) ;
			
			account.put("nationality", request.getParameter("nationality")) ;
			
			account.put("accountType", request.getParameter("accountType")) ;
			System.out.println("&************************&");
		    if
		    {	
		    	System.out.println("salaried: "+request.getParameter("curBalance"));
		    	account.put("salary",request.getParameter("salaried")) ;
		    }
			if(request.getParameter("overDraft") != null)
			{
				System.out.println("overDraft : "+request.getParameter("overDraft"));
				account.put("odLimit", request.getParameter("overDraft")) ;
			}
			if(request.getParameter("savSalBalance")!= null)
			{
				System.out.println("savSalBalance : "+request.getParameter("savSalBalance"));
				account.put("accountBalance",request.getParameter("savSalBalance"));
			}
			if(request.getParameter("savNotSalBalance")!= null)
			{
				System.out.println("savNotSalBalance : "+request.getParameter("savNotSalBalance"));
				account.put("accountBalance",request.getParameter("savNotSalBalance")) ;
			}
			
			if(request.getParameter("curBalance") != null)
			{
				System.out.println("curBalance : "+request.getParameter("curBalance"));
				account.put("accountBalance",request.getParameter("curBalance")) ;
			}
			account.put("email",request.getParameter("email"));
			
			
			if(request.getParameter("accountType").equals("savingAccount"))
			    {
				    if(request.getParameter("salaried").equals("salaried"))
				    		{
				    			account.put("accountBalance",request.getParameter("savSalBalance"));
				    			  System.out.println(mmBankFactory.createNewSavingsAccount(account));
				    		}
				    else
				    {
						account.put("accountBalance",request.getParameter("savNotSalBalance")) ;
						  System.out.println(mmBankFactory.createNewSavingsAccount(account));
				    }
			    }
			else
			{
				account.put("odLimit", request.getParameter("overDraft")) ;
				account.put("accountBalance",request.getParameter("curBalance")) ;
				System.out.println(mmBankFactory.createNewCurrentAccount(account));
			}
			
			
			
			//int counter = servicelayer.getCounter();
			//System.out.println(counter);
			//double price = servicelayer.getPrice();
			//System.out.println(price);
			//response.sendRedirect("showCart.app");
			
			break;

		case "/removenew.app":
//			servicelayer.removeBookFromCart(Integer.parseInt(request.getParameter("bookId")));
//			counter = servicelayer.getCounter();
//			System.out.println(counter);
//			price = servicelayer.getPrice();
//			System.out.println(price);
//			HttpSession session = request.getSession();
//			session.setAttribute("booksInCart", servicelayer.ViewCart());
//			session.setAttribute("counter", servicelayer.getCounter());
//			session.setAttribute("price", servicelayer.getPrice());
//			response.sendRedirect("Cart.jsp");
			
			break;
	
			
		case "/showCart.app":

//		    session = request.getSession();
//			session.setAttribute("booksInCart", servicelayer.ViewCart());
//			session.setAttribute("counter", servicelayer.getCounter());
//			session.setAttribute("price", servicelayer.getPrice());
//			response.sendRedirect("index.jsp");
//
//			break;
//
		case "/showBook.app":

//			session = request.getSession();
//			session.setAttribute("availableBooks", servicelayer.ViewBook());
//			response.sendRedirect("home.jsp");
//
	   case "/dropdownchange.app":
		     
		   String AccountType = request.getParameter("accountType");
		   System.out.println(AccountType);
		   HttpSession session = request.getSession();
		   session.setAttribute("accountType", AccountType);
			break;

		default:
			break;
		}

	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		doGet(request, response);
	}

}
